<project name="The YAPL Compiler" default="compile-java" basedir=".">
    <description>
        ANT build file for the YAPL compiler.

        User-relevant properties: (customize to your environment)
        src - directory containing Java source files
        build - directory where to put the compiled Java files
        javacc - home directory of the JavaCC installation
        ant-contrib - path to ant-contrib JAR file
        mj-jar - path to MJVM JAR file
        version - which YAPL compiler version to test (e.g. parser, symbolcheck, ...)
        yapl - YAPL source file
        outfile - file where generated target code is written to
        log - file where compiler messages are written to
    </description>

    <property name="src" location="src"/>
    <property name="build" location="ant-bin"/>
    <property name="javacc" location="F:\Programme\JavaCC\javacc-7.0.5\target"/>
    <property name="ant-contrib" location="lib/ant-contrib.jar"/>
    <property name="mj-jar" location="mjvm/mj.jar"/>
    <property name="version" value="symbolcheck"/>
    <!--<property name="version" value="parser"/>-->
    <property name="yapl" location="testfiles/${version}/test01.yapl"/>
    <property name="outfile" value="${yapl}.mj"/>
    <property name="log" value="${yapl}.log"/>

    <property name="execlog" value="${yapl}.execlog"/>
    <property name="truefile" value="${yapl}.true"/>

    <!-- test files for code generating compiler -->
    <property name="test-dir" location="testfiles/codegen"/>
    <property name="test-files"
              value="test01,test02,test03,test04,test05,test06,test07,test08,test09,test10,test11,test12,test13,test14,test15,test16,test17,test18,test19,test20,test21,test22,test23,test24,test25"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${ant-contrib}"/>
        </classpath>
    </taskdef>

    <target name="compile-ant-task">
        <javac srcdir="${src}" destdir="${build}" includeantruntime="true">
            <include name="yapl/ant/*.java"/>
        </javac>
        <typedef name="yaplbadmessage" classname="yapl.ant.YaplBadMessageCondition" classpath="${build}"/>
    </target>

    <!-- define here targets for compiling and running the YAPL compiler -->
    <!-- Does targets are written in the end of this file...
    <target name="compile-java" description="TODO: compile the YAPL compiler"/>
    <target name="run" description="TODO: run the YAPL compiler, writing compiler messages to ${log}"/>-->
    <target name="exec" depends="run"
            description="TODO: execute generated byte code in ${outfile}, write run-time output to ${execlog}"
    />

    <target name="eval-compiler-msg" depends="compile-ant-task, run"
            description="evaluate error/OK message of YAPL compiler">
        <fail>
            <condition>
                <yaplbadmessage yapl="${yapl}" log="${log}"/>
            </condition>
        </fail>
    </target>

    <target name="eval-all" description="evaluate all test cases of a given compiler 'version'">
        <echo>##############################</echo>
        <echo>### HAPPY BIRTHDAY, KLAUS! ###</echo>
        <echo>##############################</echo>
        <var name="npassed" value="0"/>
        <var name="ntotal" value="0"/>
        <for param="yapl">
            <path>
                <fileset dir="testfiles/${version}" includes="*.yapl"/>
            </path>
            <sequential>
                <trycatch>
                    <try>
                        <antcall target="eval-compiler-msg">
                            <param name="yapl" value="@{yapl}"/>
                            <param name="log" value="@{yapl}.log"/>
                        </antcall>
                        <echo>@{yapl}: PASSED</echo>
                        <math result="npassed" operand1="${npassed}" operation="+" operand2="1" datatype="int"/>
                    </try>
                    <catch>
                        <echo>@{yapl}: FAILED</echo>
                    </catch>
                </trycatch>
                <math result="ntotal" operand1="${ntotal}" operation="+" operand2="1" datatype="int"/>
            </sequential>
        </for>
        <echo>Tests passed: ${npassed}/${ntotal}</echo>
    </target>

    <target name="eval-codegen" depends="exec"
            description="evaluate code generating compiler by comparing 'execlog' to 'truefile'">
        <fail message="output file is not correct: ${execlog}">
            <condition>
                <not>
                    <filesmatch file1="${execlog}" file2="${truefile}" textfile="true"/>
                </not>
            </condition>
        </fail>
    </target>

    <target name="eval-all-codegen" description="evaluate all test cases of code generating compiler">
        <var name="npassed" value="0"/>
        <var name="ntotal" value="0"/>
        <for param="testname" list="${test-files}">
            <sequential>
                <trycatch>
                    <try>
                        <antcall target="eval-codegen">
                            <param name="yapl" value="${test-dir}/@{testname}.yapl"/>
                            <param name="outfile" value="${test-dir}/@{testname}.mj"/>
                            <param name="log" value="${test-dir}/@{testname}.log"/>
                            <param name="execlog" value="${test-dir}/@{testname}.execlog"/>
                            <param name="truefile" value="${test-dir}/@{testname}.true"/>
                        </antcall>
                        <echo>@{testname}: PASSED</echo>
                        <math result="npassed" operand1="${npassed}" operation="+" operand2="1" datatype="int"/>
                    </try>
                    <catch>
                        <echo>@{testname}: FAILED</echo>
                    </catch>
                </trycatch>
                <math result="ntotal" operand1="${ntotal}" operation="+" operand2="1" datatype="int"/>
            </sequential>
        </for>
        <echo>Tests passed: ${npassed}/${ntotal}</echo>
    </target>


    <target name="javacc">
        <javacc
                target="${src}/yapl/compiler/Parser.jj"
                outputdirectory="${src}/yapl/compiler"
                javacchome="${javacc}"
        />
    </target>
<!--    <target name="javaccTree" depends="init">-->
<!--        <jjtree-->
<!--                target="${src}/yapl/compiler/Parser.jjt"-->
<!--                outputdirectory="${src}/yapl/compiler"-->
<!--                javacchome="${javacc}"-->
<!--        />-->
<!--    </target>-->


    <!--<target name="javaccCompile" depends="javaccTree">-->
<!--    <target name="javaccCompile" depends="javaccTree">-->
<!--        <javacc-->
<!--                target="${src}/yapl/compiler/Parser.jj"-->
<!--                outputdirectory="${src}/yapl/compiler"-->
<!--                javacchome="${javacc}"-->
<!--        />-->
<!--    </target>-->

    <target name="deleteJavaccClasses">
        <delete file="${src}/yapl/compiler/Parser.java"/>
        <delete file="${src}/yapl/compiler/ParserConstants.java"/>
        <delete file="${src}/yapl/compiler/ParserTokenManager.java"/>
        <delete file="${src}/yapl/compiler/SimpleCharStream.java"/>
        <delete file="${src}/yapl/compiler/Token.java"/>
    </target>

    <target name="init">
        <mkdir dir="${build}"/>
    </target>


    <target name="compile-java" depends="init, javacc, compile-ant-task"
            description="compiles the YAPL compiler">
        <javac srcdir="${src}" destdir="${build}" includeantruntime="true"/>
    </target>

    <target name="clean">
        <delete dir="${build}"/>
    </target>


    <target name="run" depends="deleteJavaccClasses, javacc, compile-java">
        <java classname="yapl.compiler.Parser" classpath="${build}" output="${log}">
            <arg value="${yapl}"/>
        </java>
    </target>




    <!--
    #####
    # CA2cd ..
    #####
    -->
    <target name="c21">
        <javacc
                target="${src}/yapl/C21.jj"
                outputdirectory="${src}/yapl/C21"
                javacchome="${javacc}"
        />
    </target>

    <target name="c22">
        <javacc
                target="${src}/yapl/Scanner.jj"
                outputdirectory="${src}/yapl/Scanner"
                javacchome="${javacc}"
        />
    </target>

    <target name="c23">
        <javacc
                target="/yapl/compiler/Parser.jj"
                outputdirectory="${src}/yapl/Compiler"
                javacchome="${javacc}"
        />
    </target>

</project>
