options {
    LOOKAHEAD = 2;
}

PARSER_BEGIN(Scanner)
package yapl.compiler;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

/** CA2.2 */
public class Scanner {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {

        if(args.length < 1){
            System.out.println("Not enough arguments! Please enter file path.");
            return;
        }

        try{

            Scanner scanner = new Scanner(new FileInputStream(args[0]));
            scanner.start();

        }catch(Exception e){
            e.printStackTrace();
        }
   }
}

PARSER_END(Scanner)

void start() :
{ Token t; }
{
    { do { t = getNextToken();
    System.out.println(t.toString()); }
    while (t.kind != EOF);
    }
<EOF>
}

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

SPECIAL_TOKEN : /* COMMENTS */
{
 <MULTI_LINE_COMMENT: "/*" (~["*"])* "*" ("*" | (~["*","/"] (~["*"])* "*"))* "/">
}

TOKEN : /* LITERALS */
{

    <ident: <letter> ( <letter> | <digit> )*>
|
    <number: <digit> ( <digit> )*>
|
    <string:"\"" ( " " | <letter> | <digit> | <otherchar> )* "\"">
|
     <digit: ["0"-"9"] >
|
    <letter: ["A"-"Z"]|["a"-"z"]|"_">
|
    <otherchar:"+" | "-" | "*" | "/" | "." | "," | ";" | ":" | "!"
                         | "?" | "=" | "#" | "%" | "<" | ">" | "$" | "(" | ")"
                         | "[" | "]" | "{" | "}" | "\\" | "@" | "&" | "^" | "|">
}
